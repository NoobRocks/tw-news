{"version":3,"sources":["waterfall/styles.js","article/styles.js","article/index.jsx","waterfall/index.jsx","styles.js","App.js","serviceWorker.js","index.js"],"names":["container","display","flexDirection","alignItems","padding","width","height","overflow","backgroundColor","color","fontSize","boxShadow","marginBottom","flexShrink","postLink","image","maxWidth","maxHeight","objectFit","detailsContainer","justifyContent","wordBreak","dateString","alignSelf","Article","this","props","author","datePublished","title","url","urlToImage","category","style","styles","alt","src","href","target","rel","toLocaleString","React","PureComponent","API_KEY","PAGE_SIZE","Waterfall","parseDate","matchResult","match","Date","slice","fetchCategory","page","fetch","then","res","ok","json","fetchAllCategories","categories","Promise","all","map","c","results","fetchedArticles","r","i","articles","a","publishedAt","filter","reduce","r1","r2","concat","console","log","length","loadPage","combinedArticles","state","sort","a1","a2","getTime","setState","nextPage","pageToLoad","goToNextPage","theState","onContainerScroll","event","scrollTop","scrollHeight","offsetHeight","prevProps","prevState","onScroll","key","Component","backgroundImage","backgroundSize","backgroundPosition","content","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.856f2c4a.chunk.js","sourcesContent":["export default {\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: \"0 3%\",\r\n        width: \"94%\",\r\n        height: \"100%\",\r\n        overflow: \"auto\"\r\n    }\r\n};\r\n","export default {\r\n    container: {\r\n        width: \"80%\",\r\n        backgroundColor: \"#E6437B\",\r\n        color: \"white\",\r\n        padding: \"14px 3%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        fontSize: \"14px\",\r\n        boxShadow: \"5px 5px 8px rgba(0, 0, 0, .5)\",\r\n        marginBottom: \"20px\",\r\n        flexShrink: \"0\"\r\n    },\r\n\r\n    postLink: {\r\n        color: \"white\"\r\n    },\r\n\r\n    image: {\r\n        width: \"38%\",\r\n        maxWidth: \"38%\",\r\n        maxHeight: \"200px\",\r\n        objectFit: \"contain\",\r\n        flexShrink: \"0\"\r\n    },\r\n\r\n    detailsContainer: {\r\n        width: \"60%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"flex-start\",\r\n        wordBreak: \"break-word\"\r\n    },\r\n\r\n    dateString: {\r\n        alignSelf: \"flex-end\",\r\n        fontSize: \"12px\"\r\n    }\r\n};\r\n","import React from \"react\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const {author, datePublished, title, url, urlToImage, category} = this.props;\r\n        return (\r\n            <div style={styles.container}>\r\n                <img style={styles.image} alt={title} title={title} src={urlToImage}/>\r\n                <div style={{width: \"2%\", flexShrink: \"0\"}}/>\r\n                <div style={styles.detailsContainer}>\r\n                    <div>\r\n                        <span>{\"(\"}<i>{category}</i>{\")\"}</span>\r\n                        <span>{\" \"}</span>\r\n                        <span><b>{author}</b></span>\r\n                    </div>\r\n                    <a style={styles.postLink} href={url} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a>\r\n                    <div style={styles.dateString}>{datePublished.toLocaleString()}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./styles\";\r\nimport Article from \"../article\";\r\n\r\nconst API_KEY = \"875fb1f3a6ca49e49c04d62f7f254097\";\r\nconst PAGE_SIZE = 20;\r\n\r\nclass Waterfall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articles: [],\r\n            pageToLoad: 0,\r\n            nextPage: 1\r\n        };\r\n    }\r\n\r\n    parseDate = dateString => {\r\n        const matchResult = dateString.match(/(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})Z/);\r\n        return new Date(...matchResult.slice(1));\r\n    };\r\n\r\n    fetchCategory = (category, page) => fetch(`https://newsapi.org/v2/top-headlines?country=tw&apiKey=${API_KEY}&category=${category}&pageSize=${PAGE_SIZE}&page=${page}`).then(res => res.ok && res.json());\r\n\r\n    fetchAllCategories = page => {\r\n        const categories = [\"entertainment\", \"technology\", \"sports\"];\r\n        return Promise.all(categories.map(c => this.fetchCategory(c, page))).then(results => {\r\n            const fetchedArticles = results.map((r, i) => {\r\n                return r && r.articles.map(a => ({\r\n                    ...a,\r\n                    category: categories[i],\r\n                    datePublished: this.parseDate(a.publishedAt)}\r\n                ));\r\n            }).filter(r => !!r).reduce((r1, r2) => r1.concat(r2), []);\r\n            console.log(\"fetchedArticles.length\", fetchedArticles.length)\r\n            return fetchedArticles;\r\n        });\r\n    };\r\n\r\n    loadPage = page => {\r\n        console.log(\"loadPage\", page);\r\n        return this.fetchAllCategories(page).then(articles => {\r\n            const combinedArticles = this.state.articles.concat(articles);\r\n            combinedArticles.sort((a1, a2) => a2.datePublished.getTime() - a1.datePublished.getTime());\r\n            this.setState({\r\n                articles: combinedArticles,\r\n                nextPage: articles.length > 0 ? page + 1 : page,\r\n                pageToLoad: articles.length > 0 ? page : page - 1\r\n            });\r\n        });\r\n    };\r\n\r\n    goToNextPage = () => {\r\n        this.setState(theState => ({pageToLoad: theState.nextPage}));\r\n    };\r\n\r\n    onContainerScroll = event => {\r\n        if (event.target.scrollTop >= event.target.scrollHeight - event.target.offsetHeight) {\r\n            console.log(\"scrolled to bottom\");\r\n            this.goToNextPage();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.goToNextPage();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.pageToLoad !== this.state.pageToLoad && this.state.pageToLoad === this.state.nextPage)\r\n            this.loadPage(this.state.pageToLoad);\r\n    }\r\n\r\n    render() {\r\n        const {articles} = this.state;\r\n        return (\r\n            <div style={styles.container} onScroll={this.onContainerScroll}>\r\n                {articles.map((a, i) => {\r\n                    return (\r\n                        <Article {...{key: `article_${i}`, ...a}}/>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Waterfall;\r\n","export default {\r\n    container: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        backgroundImage: \"linear-gradient(45deg, black, white 30%, white 70%, black)\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n\r\n    content: {\r\n        width: \"94vw\",\r\n        height: \"100vh\"\r\n    }\r\n};\r\n","import React from 'react';\n\nimport Waterfall from \"./waterfall\";\nimport styles from './styles';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.content}>\n          <Waterfall/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}